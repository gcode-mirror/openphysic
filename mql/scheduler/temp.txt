int getDayOfWeek(int offset) {
    double cur_time = Hour() + Minute()/100 - offset;
    if (cur_time>24) {
        return((MathMod(DayOfWeek()+1, 7));
    } else if (cur_time<0) {
        return((MathMod(DayOfWeek()-1, 7));
    } else {
        return(DayOfWeek());
    }
}

double getTime(int offset) {
    return(MathMod(Hour() + Minute()/100 - offset, 24));
}

string getStrTime(int offset) {
    return(Int(getTime()) + ":" + Float(getTime())*60);
}

/*
Pb : décalage +/- 1 jour -> date (mois 30j 31j 29j)

string getStrDate(int offset) {
    return("");
}
*/

/*
 1 : jan : 31
 2 : feb : 28 (3/4) ou 29 (1/4)
 3 : mar : 31
 4 : apr : 30
 5 : may : 31
 6 : jun : 30
 7 : jul : 31
 8 : aug : 31
 9 : sep : 30
10 : oct : 31
11 : nov : 30
12 : dec : 31

fev
2012 : 29 : mod(2012, 4) = 0
2011 : 28 : mod(2011, 4) = 3
2010 : 28 : mod(2010, 4) = 2
2009 : 28 : mod(2009, 4) = 1
2008 : 29 : mod(2008, 4) = 0
*/

int getNumberOfDays(int month, int year) {
    if ( month==1 || month==3 || month==5 || month==7 || month==8 || month==10 || month==12 ) {
        return(31);
    } else if(month==4 || month==6 || month==9 || month==11) {
        return(30);
    } else if( month==2 ) {
        if (MathMod(year, 4)==0) {
            return(29);
        } else {
            return(28);
        }
    } else {
        return(-1);
    }
}


// jour de référence pour date (en 1970)

//Décalage x jours